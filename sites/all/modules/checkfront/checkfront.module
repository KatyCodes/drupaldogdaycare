<?php 
/**
 * @file
 * Integrates the Checkfront Online Booking System.
 */


/**
 * Implements hook_filter_info().
 */
function checkfront_filter_info() {
	$filters['checkfront'] = array(
		'title' => t('Checkfront Booking Shortcode'),
		'description' => t('Setup your !link and post the shortcode on your page to start booking!<br/> <i>Note: This should only be enabled on text formats restricted to <u>trusted</u> roles.</i>', array('!link' => l('Checkfront widget', 'admin/settings/checkfront'))),
		'process callback' => 'checkfront_filter_process',
		'tips callback' => 'checkfront_filter_tips',
		'weight' => 100,
	);
	
	return $filters;
}

/**
 * Implements hook_permission().
 */
function checkfront_permission() {
	return array(
		'administer checkfront' => array(
			'title' => t('Checkfront Setup'),
			'description' => t('Access administration of the Checkfront module.'),
			'restrict access' => TRUE,
		),
	); 
}

/**
 * Implementation of hook_menu().
 */
function checkfront_menu() {    
	$items['admin/settings/checkfront'] = array(
		'title' => 'Checkfront',
		'description' => 'Integrate the Checkfront online booking system.',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('checkfront_admin_settings'),
		'access arguments' => array('administer checkfront'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

/**
 * Implements hook_theme().
 */
function checkfront_theme($existing, $type, $theme, $path) {
	return array(
		'checkfront_admin_settings' => array(
			'render element' => 'form',
			'template' => 'checkfront-setup',
		)
	);
}

/**
 * Menu callback; display checkfront settings.
 */
function checkfront_admin_settings() {
	$form['#theme'] = 'checkfront_admin_settings';
	
	$form['setup'] = array(
		'#type' => 'fieldset',
		'#title' => t('Setup'),
		'#collapsible' => FALSE,
	);
	
	$form['setup']['checkfront_url'] = array(
		'#type' => 'textfield',
		'#title' => t('Checkfront Host URL'),
		'#default_value' => variable_get('checkfront_url', 'demo.checkfront.com'),
		'#size' => 50, 
		'#maxlength' => 100,
		'#required' => TRUE,
		'#description' => t('Location of your Checkfront Booking Page'),
		'#field_suffix' => t('Don\'t have a Checkfront account? <a href="https://www.checkfront.com/start">Start Your Free Trial</a>'),
	);
	
	return system_settings_form($form);
}

/**
 * Processes the form to be displayed on the setup page.
 */
function template_preprocess_checkfront_admin_settings(&$variables) {
	$variables['form_content'] = array();
	$form_hidden = array();
	
	foreach (element_children($variables['form']) as $key) {
		$type = $variables['form'][$key]['#type'];		
		if ($type == 'hidden' || $type == 'token') {
			$form_hidden[] = drupal_render($variables['form'][$key]);
		} else {
			$variables['form_content'][$key] = drupal_render($variables['form'][$key]);
		}
	}
	
	$variables['form_content']['hidden'] = implode($form_hidden);
	$variables['form_html'] = implode($variables['form_content']);
}

/**
 * Validate settings
 */
function checkfront_host() {
	$str = variable_get('checkfront_url');

	if(!preg_match('~^http://|https://~', $str)) $str = 'https://' . $str;
	if($uri = parse_url($str)) {
		if($uri['host']) {
			$host = $uri['host'];
		}
	}
	
	return $host;
}

/**
 * Provides information to the posting page about the enabled filter.
 */
function checkfront_filter_tips($filter, $format, $long) {
	if ($long) {
		return t('[checkfront] shortcode transforms into a Checkfront Booking widget. Use the shortcode generator in !settings to get more shortcode options.', array('!settings' => l('admin/settings/checkfront', 'admin/settings/checkfront')));
	} else {
		return t('[checkfront] shortcode transforms into a Checkfront Booking widget.');
	}
}

/**
 * Processes input passed to a page to check for checkfront shortcode.
 */
function checkfront_filter_process($text, $filter, $format) {
	if (!variable_get('checkfront_url')) {
		drupal_set_message(t('Please set your Checkfront URL in !settings.', array('!settings' => l('admin/settings/checkfront', 'admin/settings/checkfront'))), 'error');
		return $text;
	}
	
	return preg_replace_callback('/\[checkfront(.*?)\]/', 'checkfront_droplet', $text, 1);
}

/**
 * Parses any shortcode arguments and generates the Checkfront replacement.
 */
function checkfront_droplet($shortcode) {

	module_load_include('php', 'checkfront', 'CheckfrontWidget');

	$Checkfront = new CheckfrontWidget(
		array(
			'host' => checkfront_host(),
			'pipe_url' => base_path() . drupal_get_path('module', 'checkfront') . '/pipe.html',
			'provider' => 'drupal',
			'load_msg' => 'Searching Availability',
			'continue_msg' => 'Continue to Secure Booking System',
		)		
	);
	
	$config = array(
		'item_id'            => '',
		'category_id'        => '',
		'filter_category_id' => '',
		'layout'             => '',
		'discount_code'      => '',
		'lang_id'            => '',
		'locale_id'          => '',
		'tid'                => '',
		'partner_id'         => '',
		'options'            => '',
		'date'               => '',
		'end_date'           => '',
		'style'              => '',
		'host'               => '',
		'widget_id' => uniqid()
	);
	
	if ($shortcode[1]){
		preg_match_all('/(\w+)\s*=\s*(?|"([^"]*)"|\'([^\']*)\'|([^ ]+))/', $shortcode[1], $args, PREG_SET_ORDER);

		foreach($args as $val) {
			$config[$val[1]] = $val[2];
		}
	}

	// Shouldn't need the script on every page, so just include it above the droplet for now.
	$cf_script = "<script src=\"//{$Checkfront->host}/lib/interface--{$Checkfront->interface_version}.js\" type=\"text/javascript\"></script>";
	
	return $cf_script . $Checkfront->render($config);
}
